name: 'Trigger and Close ServiceNow Change Control'
description: 'Triggers and optionally closes a Change Control in ServiceNow for automated deployments.'

inputs:
  SN_INSTANCE_URL:
    description: 'ServiceNow instance URL.'
    required: true
  SN_USERNAME:
    description: 'ServiceNow DevOps integration username.'
    required: true
  SN_PASSWORD:
    description: 'ServiceNow DevOps integration password.'
    required: true
  SN_ORCHESTRATION_TOOL_ID:
    description: 'ServiceNow Orchestration Tool ID.'
    required: true
  job-name:
    description: 'The name of the GitHub job triggering the change.'
    required: true
    default: 'prod-deploy'
  short-description:
    description: 'Short description of the change request.'
    required: true
  description:
    description: 'Detailed description of the change request.'
    required: true
  implementation-plan:
    description: 'Implementation plan for the change request.'
    required: true
  backout-plan:
    description: 'Backout plan.'
    required: true
  test-plan:
    description: 'Test plan.'
    required: true
  assignment-group:
    description: 'The ServiceNow assignment group sys_id'
    required: true
  assigned-to:
    description: 'The ServiceNow user sys_id to whom the CHG is assigned'
    required: false
  work-notes:
    description: 'The status of the actual GitHub deployment'
    required: false
  context-github:
    description: 'GitHub context.'
    required: true
  actual_start_date:
    description: 'UTC ISO timestamp for when change actually started.'
    required: false
  actual_end_date:
    description: 'UTC ISO timestamp for when change actually ended.'
    required: false
  deploy_status:
    description: 'Deployment status (success/failure).'
    required: false
  auto-close:
    description: 'Whether to auto-close the change after creation.'
    required: false
    default: 'false'
  change_request_sys_id:
    description: 'Sys ID of existing change request to update/close (required if auto-close is true).'
    required: false

outputs:
  change_request_number:
    description: 'The created Change Request number'
  change_request_sys_id:
    description: 'The created Change Request sys_id'
  change_request_url:
    description: 'URL to view the created Change Request'

runs:
  using: "composite"
  steps:
    - name: Create or close ServiceNow Change Request
      shell: bash
      run: |
        set -e

        if [[ "${{ inputs.auto-close }}" == "true" ]]; then
          # Close/update existing change request
          if [[ -z "${{ inputs.change_request_sys_id }}" ]]; then
            echo "ERROR: change_request_sys_id input is required when auto-close is true"
            exit 1
          fi

          SYS_ID="${{ inputs.change_request_sys_id }}"

          echo "Closing change request $SYS_ID in ServiceNow..."

          if [[ "${{ inputs.deploy_status }}" == "success" ]]; then
            STATE="closed_successful"
          else
            STATE="closed_incomplete"
          fi

          curl -s -X PATCH \
            "${{ inputs.SN_INSTANCE_URL }}/api/sn_devops/devops/change/${SYS_ID}" \
            --user "${{ inputs.SN_USERNAME }}:${{ inputs.SN_PASSWORD }}" \
            --header "Content-Type: application/json" \
            --data "{
              \"actual_start_date\": \"${{ inputs.actual_start_date }}\",
              \"actual_end_date\": \"${{ inputs.actual_end_date }}\",
              \"close_code\": \"${{ inputs.deploy_status }}\",
              \"state\": \"${STATE}\",
              \"work_notes\": \"GitHub deployment result: ${{ inputs.deploy_status }}\"
            }"

          echo "Change request closed."

          # Output existing change info
          echo "change_request_number=" >> $GITHUB_OUTPUT
          echo "change_request_sys_id=${SYS_ID}" >> $GITHUB_OUTPUT
          echo "change_request_url=${{ inputs.SN_INSTANCE_URL }}/change_request.do?sys_id=${SYS_ID}" >> $GITHUB_OUTPUT

        else
          # Create new change request
          echo "Creating new change request..."

          CHANGE_REQUEST_JSON=$(jq -n \
            --arg short_description "${{ inputs.short-description }}" \
            --arg description "${{ inputs.description }}" \
            --arg implementation_plan "${{ inputs['implementation-plan'] }}" \
            --arg backout_plan "${{ inputs['backout-plan'] }}" \
            --arg test_plan "${{ inputs['test-plan'] }}" \
            --arg assignment_group "${{ inputs['assignment-group'] }}" \
            --arg assigned_to "${{ inputs['assigned-to'] }}" \
            --arg work_notes "${{ inputs['work-notes'] }}" \
            '{
              autoCloseChange: "true",
              attributes: {
                short_description: $short_description,
                description: $description,
                implementation_plan: $implementation_plan,
                backout_plan: $backout_plan,
                test_plan: $test_plan,
                assignment_group: $assignment_group,
                assigned_to: $assigned_to,
                work_notes: $work_notes
              }
            }')

          echo "$CHANGE_REQUEST_JSON" > change_request.json
          echo "CHANGE_REQUEST_JSON<<EOF" >> $GITHUB_ENV
          echo "$CHANGE_REQUEST_JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          RESPONSE=$(curl -s -X POST \
            "${{ inputs.SN_INSTANCE_URL }}/api/sn_devops/devops/change" \
            --user "${{ inputs.SN_USERNAME }}:${{ inputs.SN_PASSWORD }}" \
            --header "Content-Type: application/json" \
            --data "${CHANGE_REQUEST_JSON}")

          SYS_ID=$(echo "$RESPONSE" | jq -r '.result.sys_id // empty')
          NUMBER=$(echo "$RESPONSE" | jq -r '.result.number // empty')

          if [[ -z "$SYS_ID" ]]; then
            echo "Failed to create change request. Response:"
            echo "$RESPONSE"
            exit 1
          fi

          echo "Created change request number: $NUMBER with sys_id: $SYS_ID"

          # Set outputs
          echo "change_request_number=${NUMBER}" >> $GITHUB_OUTPUT
          echo "change_request_sys_id=${SYS_ID}" >> $GITHUB_OUTPUT
          echo "change_request_url=${{ inputs.SN_INSTANCE_URL }}/change_request.do?sys_id=${SYS_ID}" >> $GITHUB_OUTPUT
        fi
